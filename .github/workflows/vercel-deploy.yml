name: Deploy to Production (Vercel)

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'
        type: string

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10 # Specify pnpm version or remove for latest

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      # No need for the duplicate checkout or node setup steps here
      # No need to install pnpm globally via npm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Ensure necessary environment variables are available for migration if needed
      - name: Run database migrations
        run: pnpm run db:migrate
        env:
         POSTGRES_URL: ${{ secrets.POSTGRES_URL }}

      # Ensure necessary environment variables are available for build if needed
      - name: Build project
        run: pnpm run build
        # env:
        #   NEXT_PUBLIC_SOME_VAR: ${{ secrets.NEXT_PUBLIC_SOME_VAR }}

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          # Add VERCEL_ORG_ID if required by your Vercel setup
          # VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: pnpm run deploy # Ensure 'deploy' script in package.json correctly uses Vercel CLI
